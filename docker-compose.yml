services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itemrag-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "8083:8080"
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
      - ./content:/var/www/html/content
    networks:
      - app-network
    environment:
      - APP_ENV=${APP_ENV:-local}
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - qdrant

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: itemrag-mysql
    restart: unless-stopped
    ports:
      - '${FORWARD_DB_PORT:-3301}:3306'
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: itemrag-qdrant
    restart: unless-stopped
    ports:
      - "6335:6333"
      - "6336:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network

  # Redis for Cache & Queue
  redis:
    image: redis:alpine
    container_name: itemrag-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itemrag-queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
      - redis
      - db
    networks:
      - app-network
    env_file:
      - .env
    command: php artisan queue:work --tries=3 --timeout=90

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local
